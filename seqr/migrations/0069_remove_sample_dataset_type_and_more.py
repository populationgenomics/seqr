# Generated by Django 4.2.13 on 2024-07-12 18:41

from django.conf import settings
from django.db import migrations, models
from django.db.models import F
from django.db.models.functions import Coalesce
import django.db.models.deletion
import django.utils.timezone


def split_samples(apps, schema_editor):
    Sample = apps.get_model('seqr', 'Sample')
    NonRnaSample = apps.get_model('seqr', 'NonRnaSample')
    db_alias = schema_editor.connection.alias

    # Move non-RNA samples to new table
    non_rna_samples = []
    for sample in Sample.objects.using(db_alias).exclude(sample_type='RNA'):
        sample.pk = None
        sample.id = None
        non_rna_samples.append(sample)
    if non_rna_samples:
        NonRnaSample.objects.using(db_alias).bulk_create(non_rna_samples, batch_size=1000)
        print(f'Moved {len(non_rna_samples)} Non-RNA Samples')

    # Delete non-RNA samples from old table
    Sample.objects.using(db_alias).exclude(sample_type='RNA').delete()

    # Update RNA samples
    Sample.objects.all().update(
        created_date=F('loaded_date'),
        data_source=Coalesce('data_source', 'elasticsearch_index'),
    )


def merge_samples(apps, schema_editor):
    Sample = apps.get_model('seqr', 'Sample')
    NonRnaSample = apps.get_model('seqr', 'NonRnaSample')
    db_alias = schema_editor.connection.alias

    Sample.objects.all().update(loaded_date=F('created_date'))

    non_rna_samples = []
    for sample in NonRnaSample.objects.using(db_alias).all():
        sample.pk = None
        sample.id = None
        non_rna_samples.append(sample)
    if non_rna_samples:
        Sample.objects.using(db_alias).bulk_create(non_rna_samples, batch_size=1000)
        print(f'Moved {len(non_rna_samples)} Non-RNA Samples')


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('seqr', '0068_project_vlm_contact_email'),
    ]

    operations = [
        migrations.CreateModel(
            name='NonRnaSample',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guid', models.CharField(db_index=True, max_length=30, unique=True)),
                ('created_date', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('last_modified_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('sample_type', models.CharField(choices=[('WES', 'Exome'), ('WGS', 'Whole Genome')], max_length=10)),
                ('dataset_type', models.CharField(
                    choices=[('SNV_INDEL', 'Variant Calls'), ('SV', 'SV Calls'), ('MITO', 'Mitochondria calls'),
                             ('ONT_SNV_INDEL', 'ONT Calls')], max_length=13)),
                ('sample_id', models.TextField(db_index=True)),
                ('elasticsearch_index', models.TextField(db_index=True, null=True)),
                ('data_source', models.TextField(null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('loaded_date', models.DateTimeField()),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                                 related_name='+', to=settings.AUTH_USER_MODEL)),
                ('individual', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='seqr.individual')),
            ],
        ),
        migrations.RunPython(split_samples, reverse_code=merge_samples),
    ]
